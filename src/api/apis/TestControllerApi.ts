// tslint:disable
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { Observable } from 'rxjs';
import type { AjaxResponse } from 'rxjs/ajax';
import { BaseAPI } from '../runtime';
import type { OperationOpts } from '../runtime';
import type {
    ErrorMessage,
} from '../models';

/**
 * no description
 */
export class TestControllerApi extends BaseAPI {

    /**
     */
    adminAccess(): Observable<string>
    adminAccess(opts?: OperationOpts): Observable<AjaxResponse<string>>
    adminAccess(opts?: OperationOpts): Observable<string | AjaxResponse<string>> {
        return this.request<string>({
            url: '/api/test/admin',
            method: 'GET',
        }, opts?.responseOpts);
    };

    /**
     */
    allAccess(): Observable<string>
    allAccess(opts?: OperationOpts): Observable<AjaxResponse<string>>
    allAccess(opts?: OperationOpts): Observable<string | AjaxResponse<string>> {
        return this.request<string>({
            url: '/api/test/all',
            method: 'GET',
        }, opts?.responseOpts);
    };

    /**
     */
    moderatorAccess(): Observable<string>
    moderatorAccess(opts?: OperationOpts): Observable<AjaxResponse<string>>
    moderatorAccess(opts?: OperationOpts): Observable<string | AjaxResponse<string>> {
        return this.request<string>({
            url: '/api/test/mod',
            method: 'GET',
        }, opts?.responseOpts);
    };

    /**
     */
    userAccess(): Observable<string>
    userAccess(opts?: OperationOpts): Observable<AjaxResponse<string>>
    userAccess(opts?: OperationOpts): Observable<string | AjaxResponse<string>> {
        return this.request<string>({
            url: '/api/test/user',
            method: 'GET',
        }, opts?.responseOpts);
    };

}
